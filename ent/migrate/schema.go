// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// HistoriesColumns holds the columns for the "histories" table.
	HistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "meta_histories", Type: field.TypeInt, Nullable: true},
	}
	// HistoriesTable holds the schema information for the "histories" table.
	HistoriesTable = &schema.Table{
		Name:       "histories",
		Columns:    HistoriesColumns,
		PrimaryKey: []*schema.Column{HistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "histories_meta_histories",
				Columns:    []*schema.Column{HistoriesColumns[2]},
				RefColumns: []*schema.Column{MetaColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MetaColumns holds the columns for the "meta" table.
	MetaColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "favorite", Type: field.TypeBool, Default: false},
		{Name: "file_indices", Type: field.TypeJSON},
		{Name: "thumbnail", Type: field.TypeBytes, Nullable: true},
		{Name: "read", Type: field.TypeBool, Default: false},
		{Name: "active", Type: field.TypeBool, Default: true},
	}
	// MetaTable holds the schema information for the "meta" table.
	MetaTable = &schema.Table{
		Name:       "meta",
		Columns:    MetaColumns,
		PrimaryKey: []*schema.Column{MetaColumns[0]},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "favorite", Type: field.TypeBool, Default: false},
		{Name: "hidden", Type: field.TypeBool, Default: false},
		{Name: "thumbnail", Type: field.TypeBytes, Nullable: true},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
	}
	// MetaTagsColumns holds the columns for the "meta_tags" table.
	MetaTagsColumns = []*schema.Column{
		{Name: "meta_id", Type: field.TypeInt},
		{Name: "tag_id", Type: field.TypeInt},
	}
	// MetaTagsTable holds the schema information for the "meta_tags" table.
	MetaTagsTable = &schema.Table{
		Name:       "meta_tags",
		Columns:    MetaTagsColumns,
		PrimaryKey: []*schema.Column{MetaTagsColumns[0], MetaTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "meta_tags_meta_id",
				Columns:    []*schema.Column{MetaTagsColumns[0]},
				RefColumns: []*schema.Column{MetaColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "meta_tags_tag_id",
				Columns:    []*schema.Column{MetaTagsColumns[1]},
				RefColumns: []*schema.Column{TagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		HistoriesTable,
		MetaTable,
		TagsTable,
		MetaTagsTable,
	}
)

func init() {
	HistoriesTable.ForeignKeys[0].RefTable = MetaTable
	MetaTagsTable.ForeignKeys[0].RefTable = MetaTable
	MetaTagsTable.ForeignKeys[1].RefTable = TagsTable
}
